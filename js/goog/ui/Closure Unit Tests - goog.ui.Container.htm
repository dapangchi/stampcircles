<!DOCTYPE html>
<!-- saved from url=(0083)http://closure-library.googlecode.com/svn/trunk/closure/goog/ui/container_test.html -->
<HTML><!--
Copyright 2008 Google Inc. All Rights Reserved.

--><HEAD><META http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
  <TITLE>Closure Unit Tests - goog.ui.Container</TITLE>
  <SCRIPT src="./Closure Unit Tests - goog.ui.Container_files/base.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/deps.js"></SCRIPT>
  <SCRIPT>
    goog.require('goog.dom');
    goog.require('goog.dom.classes');
    goog.require('goog.testing.events');
    goog.require('goog.testing.jsunit');
    goog.require('goog.ui.Container');
    goog.require('goog.ui.Control');
  </SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/array.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/tagname.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/classes.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/coordinate.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/size.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/object.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/string.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/useragent.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/dom.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/errorhandlerweakdep.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/disposable.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/event.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/browserevent.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/eventwrapper.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/listener.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/simplepool.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/jscript.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/pools.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/events.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/keycodes.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/events(1).js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/stacktrace.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/asserts.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/testcase.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/testrunner.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/jsunit.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/a11y.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/eventtarget.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/keyhandler.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/box.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/rect.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/product.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/style.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/eventhandler.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/idgenerator.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/component.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/controlcontent.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/controlrenderer.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/registry.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/decorate.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/control.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/menuseparatorrenderer.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/separator.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/containerrenderer.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.ui.Container_files/container.js"></SCRIPT>
</HEAD><BODY>
  <DIV id="sandbox"></DIV>
  <SCRIPT>
    var sandbox = goog.dom.$('sandbox');
    var containerElement;
    var container;

    function setUp() {
      container = new goog.ui.Container();

      sandbox.innerHTML =
          '<div id="containerElement" class="goog-container">\n' +
          '  <div class="goog-control">Hello</div>\n' +
          '  <div class="goog-control">World</div>\n' +
          '</div>';
      containerElement = goog.dom.$('containerElement');
    }

    function tearDown() {
      goog.dom.removeChildren(sandbox);
      container.dispose();
      goog.events.removeAll();
    }

    function testDecorateHidden() {
      containerElement.style.display = 'none';

      assertTrue('Container must be visible', container.isVisible());
      container.decorate(containerElement);
      assertFalse('Container must be hidden', container.isVisible());
      container.forEachChild(function(control) {
        assertTrue('Child control ' + control.getId() + ' must report being ' +
            'visible, even if in a hidden container', control.isVisible());
      });
    }

    function testDecorateDisabled() {
      goog.dom.classes.add(containerElement, 'goog-container-disabled');

      assertTrue('Container must be enabled', container.isEnabled());
      container.decorate(containerElement);
      assertFalse('Container must be disabled', container.isEnabled());
      container.forEachChild(function(control) {
        assertFalse('Child control ' + control.getId() + ' must be disabled, ' +
            'because the host container is disabled', control.isEnabled());
      });
    }

    function testDecorateFocusableContainer() {
      container.decorate(containerElement);
      assertTrue('Container must be focusable', container.isFocusable());
      container.forEachChild(function(control) {
        assertFalse('Child control ' + control.getId() + ' must not be ' +
            'focusable',
            control.isSupportedState(goog.ui.Component.State.FOCUSED));
      });
    }

    function testDecorateFocusableChildrenContainer() {
      container.setFocusable(false);
      container.setFocusableChildrenAllowed(true);
      container.decorate(containerElement);
      assertFalse('Container must not be focusable', container.isFocusable());
      container.forEachChild(function(control) {
        assertTrue('Child control ' + control.getId() + ' must be ' +
            'focusable',
            control.isSupportedState(goog.ui.Component.State.FOCUSED));
      });
    }

    function testHighlightOnEnter() {
      // This interaction test ensures that containers enforce that children
      // get highlighted on mouseover, and that one and only one child may
      // be highlighted at a time.  Although integration tests aren't the
      // best, it's difficult to test these event-based interactions due to
      // their disposition toward the "misunderstood contract" problem.

      container.decorate(containerElement);
      assertFalse('Child 0 should initially not be highlighted',
          container.getChildAt(0).isHighlighted());

      goog.testing.events.fireMouseOverEvent(
          container.getChildAt(0).getElement(), sandbox);
      assertTrue('Child 0 should become highlighted after a mouse over',
          container.getChildAt(0).isHighlighted());

      goog.testing.events.fireMouseOverEvent(
          container.getChildAt(1).getElement(),
          container.getChildAt(0).getElement());
      assertFalse('Child 0 should lose highlight when child 1 is moused ' +
          'over, even if no mouseout occurs.',
          container.getChildAt(0).isHighlighted());
      assertTrue('Child 1 should now be highlighted.',
          container.getChildAt(1).isHighlighted());
    }

    function testHighlightOnEnterPreventable() {
      container.decorate(containerElement);
      goog.events.listen(container, goog.ui.Component.EventType.ENTER,
          function(event) {
            event.preventDefault();
          });
      goog.testing.events.fireMouseOverEvent(
          container.getChildAt(0).getElement(), sandbox);
      assertFalse('Child 0 should not be highlighted if preventDefault called',
          container.getChildAt(0).isHighlighted());
    }

    function testHighlightDisabled() {
      // Another interaction test.  Already tested in control_test.
      container.decorate(containerElement);
      container.getChildAt(0).setEnabled(false);
      goog.testing.events.fireMouseOverEvent(
          container.getChildAt(0).getElement(), sandbox);
      assertFalse('Disabled children should not be highlighted',
          container.getChildAt(0).isHighlighted());
    }

    function testGetOwnerControl() {
      container.decorate(containerElement);

      assertEquals('Must return appropriate control given an element in the ' +
          'control.',
          container.getChildAt(1),
          container.getOwnerControl(container.getChildAt(1).getElement()));

      assertNull('Must return null for element not associated with control.',
          container.getOwnerControl(document.body));
      assertNull('Must return null if given null node',
          container.getOwnerControl(null));
    }

    function testShowEvent() {
      container.decorate(containerElement);
      container.setVisible(false);
      var eventFired = false;
      goog.events.listen(container, goog.ui.Component.EventType.SHOW,
          function() {
            assertFalse('Container must not be visible when SHOW event is ' +
                        'fired',
                        container.isVisible());
            eventFired = true;
          });
      container.setVisible(true);
      assertTrue('SHOW event expected', eventFired);
    }

    function testAfterShowEvent() {
      container.decorate(containerElement);
      container.setVisible(false);
      var eventFired = false;
      goog.events.listen(container, goog.ui.Container.EventType.AFTER_SHOW,
          function() {
            assertTrue('Container must be visible when AFTER_SHOW event is ' +
                       'fired',
                       container.isVisible());
            eventFired = true;
          });
      container.setVisible(true);
      assertTrue('AFTER_SHOW event expected', eventFired);
    }

    function testHideEvent() {
      container.decorate(containerElement);
      container.setVisible(true);
      var eventFired = false;
      goog.events.listen(container, goog.ui.Component.EventType.HIDE,
          function() {
            assertTrue('Container must be visible when HIDE event is fired',
                       container.isVisible());
            eventFired = true;
          });
      container.setVisible(false);
      assertTrue('HIDE event expected', eventFired);
    }

    /**
     * Test container to which the elements have to be added with
     * {@code container.addChild(element, false)}
     * @constructor
     * @extends {goog.ui.Container}
     */
    function ListContainer() {
      goog.ui.Container.call(this);
    }
    goog.inherits(ListContainer, goog.ui.Container);

    /** @inheritDoc */
    ListContainer.prototype.createDom = function() {
      ListContainer.superClass_.createDom.call(this);
      var ul = this.getDomHelper().createDom('ul');
      this.forEachChild(function(child) {
        child.createDom();
        var childEl = child.getElement();
        ul.appendChild(this.getDomHelper().createDom('li', {}, childEl));
      }, this);
      this.getContentElement().appendChild(ul);
    };

    function testGetOwnerControlWithNoRenderingInAddChild() {
      var listContainer = new ListContainer();
      var control = new goog.ui.Control('item');
      listContainer.addChild(control);
      listContainer.render();
      var ownerControl = listContainer.getOwnerControl(control.getElement());
      listContainer.dispose();

      assertEquals('Control was added with addChild(control, false)',
          control, ownerControl);
    }
  </SCRIPT>


<DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; font-weight: bold; ">Closure Unit Tests - goog.ui.Container [PASSED]</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; font-weight: bold; ">closure-library.googlecode.com/svn/trunk/closure/goog/ui/container_test.html</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">12 of 12 tests run in 100ms.</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">12 passed, 0 failed.</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">8 ms/test. 47 files loaded.</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">.</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:18:18.730  Start</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:18:18.920  testAfterShowEvent : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:18:18.103  testDecorateDisabled : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:18:18.111  testDecorateFocusableChildrenContainer : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:18:18.117  testDecorateFocusableContainer : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:18:18.122  testDecorateHidden : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:18:18.126  testGetOwnerControl : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:18:18.134  testGetOwnerControlWithNoRenderingInAddChild : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:18:18.139  testHideEvent : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:18:18.148  testHighlightDisabled : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:18:18.161  testHighlightOnEnter : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:18:18.168  testHighlightOnEnterPreventable : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:18:18.173  testShowEvent : PASSED</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:18:18.173  Done</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; "> </DIV><A style="display: block; font-size: small; " href="">Run again without reloading</A></DIV></BODY></HTML>