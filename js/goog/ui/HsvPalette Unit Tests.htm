<!DOCTYPE html>
<!-- saved from url=(0084)http://closure-library.googlecode.com/svn/trunk/closure/goog/ui/hsvpalette_test.html -->
<HTML><!--
  Copyright 2008 Google Inc. All Rights Reserved.

--><HEAD><META http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
  <TITLE>HsvPalette Unit Tests</TITLE>
  <SCRIPT src="./HsvPalette Unit Tests_files/base.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/deps.js"></SCRIPT>
  <SCRIPT src="./HsvPalette Unit Tests_files/deps.js"></SCRIPT>
  <SCRIPT>
    goog.require('goog.color');
    goog.require('goog.events');
    goog.require('goog.math.Rect');
    goog.require('goog.style');
    goog.require('goog.testing.PropertyReplacer');
    goog.require('goog.testing.events');
    goog.require('goog.testing.jsunit');
    goog.require('goog.ui.HsvPalette');
  </SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/names.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/array.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/coordinate.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/box.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/range.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/size.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/rect.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/math.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/color.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/errorhandlerweakdep.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/disposable.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/event.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/string.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/useragent.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/browserevent.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/eventwrapper.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/listener.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/simplepool.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/jscript.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/pools.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/object.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/events.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/tagname.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/classes.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/dom.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/product.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/style.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/propertyreplacer.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/keycodes.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/events(1).js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/stacktrace.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/asserts.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/testcase.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/testrunner.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/jsunit.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/eventtarget.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/inputhandler.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/eventhandler.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/idgenerator.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/component.js"></SCRIPT><SCRIPT type="text/javascript" src="./HsvPalette Unit Tests_files/hsvpalette.js"></SCRIPT>
</HEAD><BODY>
  <DIV id="sandbox"></DIV>
  <SCRIPT>
    var samplePalette;
    var eventWasFired = false;
    var stubs = new goog.testing.PropertyReplacer();
    
    function setUp() {
      samplePalette = new goog.ui.HsvPalette();
    }

    function tearDown() {
      samplePalette.dispose();
      stubs.reset();
    }
    
    function testOptionalInitialColor() {
      var initialColor = '#0000ff';
      var customInitialPalette = new goog.ui.HsvPalette(null, initialColor);
      assertEquals(initialColor,
                   goog.color.parse(customInitialPalette.getColor()).hex);
    }
    
    function testCustomClassName() {
      var customClassName = 'custom-plouf';
      var customClassPalette =
          new goog.ui.HsvPalette(null, null, customClassName);
      customClassPalette.createDom();
      assertTrue(goog.dom.classes.has(customClassPalette.getElement(),
                                      customClassName));
    }
    
    function testCannotDecorate() {
      assertFalse(samplePalette.canDecorate());
    }
    
    function testSetColor() {
      var color = '#abcdef';
      samplePalette.setColor(color);
      assertEquals(color, goog.color.parse(samplePalette.getColor()).hex);
    }
    
    function testChangeEvent() {
      // TODO: Add functionality to goog.testing.events to assert
      // an event was fired.
      goog.events.listen(samplePalette, goog.ui.Component.EventType.ACTION,
          function() {eventWasFired = true;});
      samplePalette.setColor('#123456');
      assertTrue(eventWasFired);
    }
    
    function testSetHsv() {
      // Start from red.
      samplePalette.setColor('#ff0000');
      
      // Setting hue to 0.5 should yield cyan.
      samplePalette.setHsv(0.5, null, null);
      assertEquals('#00ffff', goog.color.parse(samplePalette.getColor()).hex);

      // Setting saturation to 0 should yield white.
      samplePalette.setHsv(null, 0, null);
      assertEquals('#ffffff',
                   goog.color.parse(samplePalette.getColor()).hex);

      // Setting value/brightness to 0 should yield black.
      samplePalette.setHsv(null, null, 0);
      assertEquals('#000000', goog.color.parse(samplePalette.getColor()).hex);
    }
    
    function testRender() {
      samplePalette.render(document.getElementById('sandbox'));

      assertTrue(samplePalette.isInDocument());

      var elem = samplePalette.getElement();
      assertNotNull(elem);
      assertEquals(goog.dom.TagName.DIV, elem.tagName);

      if (goog.userAgent.IE && !goog.userAgent.isVersion('7')) {
        assertSameElements('On IE6, the noalpha class must be present',
            ['goog-hsv-palette', 'goog-hsv-palette-noalpha'],
            goog.dom.classes.get(elem));
      } else {
        assertEquals('The noalpha class must not be present',
           'goog-hsv-palette', elem.className);
      }
    }
    
    function testNoLeftOverListenersAfterDispose() {
      var initialListenerCount = goog.events.getTotalListenerCount();
      samplePalette.render(document.getElementById('sandbox'));
      samplePalette.dispose();
      assertEquals(initialListenerCount, goog.events.getTotalListenerCount());
    }
    
    function testSwatchTextIsReadable() {
      samplePalette.render(document.getElementById('sandbox'));
    
      // Text should be black when background is light.
      samplePalette.setColor('#ccffff');
      assertEquals('#000000', 
                   goog.color.parse(goog.style.getStyle(samplePalette.swatchEl_,
                                                        'color')).hex);

      // Text should be white when background is dark.
      samplePalette.setColor('#410800');
      assertEquals('#ffffff', 
                   goog.color.parse(goog.style.getStyle(samplePalette.swatchEl_,
                                                        'color')).hex);
    }
    
    function testInputColor() {
      samplePalette.render(document.getElementById('sandbox'));
      var color = '#001122';
      samplePalette.inputEl_.value = color;
      samplePalette.handleInput_(null);
      assertEquals(color, goog.color.parse(samplePalette.getColor()).hex);
    }
    
    function testHandleMouseMoveValue() {
      samplePalette.render(document.getElementById('sandbox'));
      stubs.set(goog.dom, 'getPageScroll', function() {
        return new goog.math.Coordinate(0, 0);
      });
      
      // Raising the value/brightness of a dark red should yield a lighter red.
      samplePalette.setColor('#630c00');
      goog.style.setPageOffset(samplePalette.vImageEl_, 0, 0);
      goog.style.setSize(samplePalette.vImageEl_, 10, 100);
      var boundaries = goog.style.getBounds(samplePalette.vImageEl_);

      var event = new goog.events.Event();
      event.clientY = -50;
      // TODO: Use
      // goog.testing.events.fireMouseDownEvent(samplePalette.vImageEl_);
      // when google.testing.events support specifying properties of the event
      // or find out how tod o it if it already supports it.
      samplePalette.handleMouseMoveV_(boundaries, event);
      assertEquals('#ff1e00', goog.color.parse(samplePalette.getColor()).hex);
    }
    
    function testHandleMouseMoveHueSaturation() {
      samplePalette.render(document.getElementById('sandbox'));
      stubs.set(goog.dom, 'getPageScroll', function() {
        return new goog.math.Coordinate(0, 0);
      });
      
      // The following hue/saturation selection should yield a light yellow.
      goog.style.setPageOffset(samplePalette.hsImageEl_, 0, 0);
      goog.style.setSize(samplePalette.hsImageEl_, 100, 100);
      var boundaries = goog.style.getBounds(samplePalette.hsImageEl_);

      var event = new goog.events.Event();
      event.clientX = 20;
      event.clientY = 85;
      // TODO: Use goog.testing.events when appropriate (see above).
      samplePalette.handleMouseMoveHs_(boundaries, event);
      // TODO: Fix the main code for this, see bug #1324469.
      // NOTE: It's a little better than before due to the
      // goog.style getBoundingClientRect fix, but still not the same. :-(
      if (goog.userAgent.IE) {
        var expectedColor = '#ffe0b2';
      } else {
        var expectedColor = '#ffeec4';
      }

      assertEquals(expectedColor,
                   goog.color.parse(samplePalette.getColor()).hex);
    }
  </SCRIPT>


<DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; font-weight: bold; ">HsvPalette Unit Tests [PASSED]</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; font-weight: bold; ">closure-library.googlecode.com/svn/trunk/closure/goog/ui/hsvpalette_test.html</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">12 of 12 tests run in 62ms.</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">12 passed, 0 failed.</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">5 ms/test. 44 files loaded.</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">.</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:27:07.616  Start</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:27:07.623  testCannotDecorate : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:27:07.633  testChangeEvent : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:27:07.637  testCustomClassName : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:27:07.659  testHandleMouseMoveHueSaturation : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:27:07.664  testHandleMouseMoveValue : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:27:07.667  testInputColor : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:27:07.670  testNoLeftOverListenersAfterDispose : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:27:07.671  testOptionalInitialColor : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:27:07.674  testRender : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:27:07.675  testSetColor : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:27:07.675  testSetHsv : PASSED</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:27:07.678  testSwatchTextIsReadable : PASSED</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">08:27:07.678  Done</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; "> </DIV><A style="display: block; font-size: small; " href="">Run again without reloading</A></DIV></BODY></HTML>