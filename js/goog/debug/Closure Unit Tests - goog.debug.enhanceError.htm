<!DOCTYPE html>
<!-- saved from url=(0089)http://closure-library.googlecode.com/svn/trunk/closure/goog/debug/enhanceerror_test.html -->
<HTML><!--
  Copyright 2007 Google Inc. All Rights Reserved.
--><HEAD><META http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>Closure Unit Tests - goog.debug.enhanceError</TITLE>
<SCRIPT src="./Closure Unit Tests - goog.debug.enhanceError_files/base.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.debug.enhanceError_files/deps.js"></SCRIPT>
<SCRIPT>
  goog.require('goog.debug');
  goog.require('goog.testing.jsunit');
</SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.debug.enhanceError_files/array.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.debug.enhanceError_files/string.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.debug.enhanceError_files/object.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.debug.enhanceError_files/structs.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.debug.enhanceError_files/iter.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.debug.enhanceError_files/map.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.debug.enhanceError_files/set.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.debug.enhanceError_files/debug.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.debug.enhanceError_files/stacktrace.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.debug.enhanceError_files/asserts.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.debug.enhanceError_files/testcase.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.debug.enhanceError_files/testrunner.js"></SCRIPT><SCRIPT type="text/javascript" src="./Closure Unit Tests - goog.debug.enhanceError_files/jsunit.js"></SCRIPT>
</HEAD><BODY>
<SCRIPT>

var THROW_STRING = 1;
var THROW_NPE = 2;
var THROW_ERROR = 3;
var THROW_ENHANCED_ERROR = 4;
var THROW_ENHANCED_STRING = 5;

if (typeof debug == 'undefined') {
  function debug(str) {
    if (window.console) window.console.log(str);
  }
}

function testEnhanceError() {
  // Tests are like this:
  // [test num, expect something in the stack, expect an extra message]
  var tests = [
    [THROW_STRING],
    [THROW_NPE],
    [THROW_ERROR],
    [THROW_ENHANCED_ERROR, 'throwEnhancedError', 'an enhanced error'],
    [THROW_ENHANCED_STRING, 'throwEnhancedString']
  ];
  for (var i = 0; i < tests.length; ++i) {
    var test = tests[i];
    var testNum = test[0];
    var testInStack = test[1];
    var testExtraMessage = test[2] || null;
    try {
      foo(testNum);
    } catch (e) {
      debug(goog.debug.expose(e));
      var s = e.stack.split('\n');
      for (var j = 0; j < s.length; ++j) {
        debug(s[j]);
      }
      // 'baz' is always in the stack
      assertTrue('stack should contain "baz"',
                 e.stack.indexOf('baz') != -1);

      if (testInStack) {
        assertTrue('stack should contain "' + testInStack + '"',
                   e.stack.indexOf(testInStack) != -1);
      }
      if (testExtraMessage) {
        // 2 messages
        assertTrue('message0 should contain "' + testExtraMessage + '"',
                   e.message0.indexOf(testExtraMessage) != -1);
        assertTrue('message1 should contain "message from baz"',
                   e.message1.indexOf('message from baz') != -1);
      } else {
        // 1 message
        assertTrue('message0 should contain "message from baz"',
                   e.message0.indexOf('message from baz') != -1);
      }
      continue;
    }
    fail('expected to catch an exception');
  }
}


function foo(testNum) {
  bar(testNum);
}

function bar(testNum) {
  baz(testNum);
}

function baz(testNum) {
  try {
    switch (testNum) {
      case THROW_STRING:
        throwString();
        break;
      case THROW_NPE:
        throwNpe();
        break;
      case THROW_ERROR:
        throwError();
        break;
      case THROW_ENHANCED_ERROR:
        throwEnhancedError();
        break;
      case THROW_ENHANCED_STRING:
        throwEnhancedString();
        break;
    }
  } catch (e) {
    throw goog.debug.enhanceError(e, 'message from baz');
  }
}

function throwString() {
  throw 'a string';
}

function throwNpe() {
  var nada = null;
  nada.noSuchFunction();
}

function throwError() {
  throw Error('an error');
}

function throwEnhancedError() {
  throw goog.debug.enhanceError(Error('dang!'), 'an enhanced error');
}

function throwEnhancedString() {
  throw goog.debug.enhanceError('oh nos!');
}

</SCRIPT>



<DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; font-weight: bold; ">Closure Unit Tests - goog.debug.enhanceError [PASSED]</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; font-weight: bold; ">closure-library.googlecode.com/svn/trunk/closure/goog/debug/enhanceerror_test.html</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">1 of 1 tests run in 23ms.</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">1 passed, 0 failed.</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">23 ms/test. 15 files loaded.</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">.</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">04:19:57.955  Start</DIV><DIV style="color: rgb(0, 100, 0); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">04:19:57.978  testEnhanceError : PASSED</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; ">04:19:57.978  Done</DIV><DIV style="color: rgb(51, 51, 51); font: normal normal normal 100%/normal monospace; white-space: pre-wrap; "> </DIV><A style="display: block; font-size: small; " href="">Run again without reloading</A></DIV></BODY></HTML>